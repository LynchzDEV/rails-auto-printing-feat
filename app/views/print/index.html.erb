<!DOCTYPE html>
<html>
<head>
  <title>Multi-Page PDF Print Demo</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>

  <style>
    body {
      font-family: Arial, sans-serif;
      max-width: 900px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f5f5f5;
    }

    .container {
      background: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .form-section {
      margin-bottom: 30px;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 5px;
      background-color: #fafafa;
    }

    .form-group {
      margin-bottom: 15px;
    }

    label {
      display: block;
      font-weight: bold;
      margin-bottom: 5px;
      color: #333;
    }

    input, textarea, select {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 14px;
      transition: border-color 0.3s ease;
    }

    input:focus, textarea:focus, select:focus {
      outline: none;
      border-color: #007bff;
      box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
    }

    input[type="number"] {
      max-width: 150px;
    }

    .print-options-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 20px;
    }

    @media (max-width: 768px) {
      .print-options-grid {
        grid-template-columns: 1fr;
      }
    }

    .option-info {
      font-size: 12px;
      color: #666;
      margin-top: 5px;
      line-height: 1.4;
    }

    .copies-input-group {
      position: relative;
    }

    .copies-counter {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      background: #f8f9fa;
      padding: 2px 6px;
      border-radius: 3px;
      font-size: 11px;
      color: #6c757d;
      pointer-events: none;
    }

    .item-row {
      display: grid;
      grid-template-columns: 2fr 1fr 1fr auto;
      gap: 10px;
      align-items: end;
      margin-bottom: 10px;
      padding: 15px;
      background: white;
      border-radius: 5px;
      border: 1px solid #eee;
    }

    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
      transition: background-color 0.3s;
    }

    .btn-primary { background-color: #007bff; color: white; }
    .btn-primary:hover { background-color: #0056b3; }

    .btn-success { background-color: #28a745; color: white; }
    .btn-success:hover { background-color: #1e7e34; }

    .btn-secondary { background-color: #6c757d; color: white; }
    .btn-secondary:hover { background-color: #545b62; }

    .btn-danger { background-color: #dc3545; color: white; }
    .btn-danger:hover { background-color: #c82333; }

    .checkbox-group {
      display: flex;
      align-items: center;
      margin: 10px 0;
    }

    .checkbox-group input[type="checkbox"] {
      width: auto;
      margin-right: 10px;
    }
  </style>
</head>

<body>
  <div class="container">
    <div style="display: flex; justify-content: space-between; align-items: center;">
      <h1>Multi-Page PDF Generator</h1>
      <%= link_to "Generate Certificate", certificate_path, class: "btn btn-secondary" %>
    </div>
    <p>Fill out the form below to generate a multi-page PDF with dynamic content.</p>

    <%= form_with url: print_generate_pdf_path(format: :pdf), method: :get, local: true, target: "_blank" do |f| %>

      <div class="form-section">
        <h3>üìã Customer Information</h3>

        <div class="form-group">
          <%= f.label :customer_name, "Customer Name:" %>
          <%= f.text_field :customer_name, placeholder: "Enter customer name", value: "John Doe" %>
        </div>
      </div>

      <div class="form-section">
        <h3>üõçÔ∏è Items</h3>
        <div id="items-container">
        </div>

        <button type="button" onclick="addItemRow()" class="btn btn-secondary">
          + Add Item
        </button>
      </div>

      <div class="form-section">
        <h3>‚öôÔ∏è Print Options</h3>

        <div class="print-options-grid">
          <div class="form-group">
            <%= f.label :copies, "Number of Copies to Print:" %>
            <div class="copies-input-group">
              <%= f.number_field :copies, min: 1, max: 200, value: 2, class: "form-control",
                                title: "Enter number of copies (1-200)",
                                id: "copies_input" %>
              <span class="copies-counter" id="copies_counter">2 copies</span>
            </div>
            <div class="option-info">
              üìÑ Each copy includes all pages (main + item details + summary if enabled)
            </div>
          </div>

          <div class="form-group">
            <%= f.label :print_mode, "Print Mode:" %>
            <%= f.select :print_mode,
                options_for_select([
                  ['üìÑ Single PDF with all copies', 'single'],
                  ['üì¶ Separate PDF files (ZIP download)', 'separate']
                ], 'single'),
                {}, { class: "form-control", id: "print_mode_select" } %>
            <div class="option-info" id="print_mode_info">
              Single PDF: All copies in one file (recommended for most users)
            </div>
          </div>
        </div>

        <div class="checkbox-group">
          <%= f.check_box :include_summary, { checked: true }, "1", "0" %>
          <%= f.label :include_summary, "Include summary page" %>
        </div>
      </div>

      <div style="text-align: center; margin-top: 30px;">
        <%= f.submit "Generate PDF", class: "btn btn-primary", style: "margin-right: 10px;" %>

        <button type="button" onclick="generateAndPrint()" class="btn btn-success">
          Generate & Auto-Print
        </button>
      </div>

    <% end %>

    <div class="form-section" style="margin-top: 30px;">
      <h3>üìÑ What will be generated:</h3>
      <ul>
        <li><strong>Main Page:</strong> Customer info and items overview</li>
        <li><strong>Detail Pages:</strong> One page per item with full details</li>
        <li><strong>Summary Page:</strong> Statistics and totals (if enabled)</li>
        <li><strong>Multiple Copies:</strong> Generate 1-50 copies with flexible print modes</li>
        <li><strong>Print Modes:</strong> Single PDF with all copies OR separate PDF files</li>
      </ul>
    </div>
  </div>

  <script>
    let itemCounter = 0;

    function addItemRow() {
      itemCounter++;
      const container = document.getElementById('items-container');

      const itemRow = document.createElement('div');
      itemRow.className = 'item-row';
      itemRow.id = `item-${itemCounter}`;

      itemRow.innerHTML = `
        <div>
          <label>Item Name:</label>
          <input type="text" name="items[][name]" placeholder="Product name" required>
        </div>
        <div>
          <label>Quantity:</label>
          <input type="number" name="items[][quantity]" min="1" value="1" required>
        </div>
        <div>
          <label>Price ($):</label>
          <input type="number" name="items[][price]" step="0.01" min="0" value="0.00" required>
        </div>
        <div>
          <label>&nbsp;</label>
          <button type="button" onclick="removeItem(${itemCounter})" class="btn btn-danger">Remove</button>
        </div>
        <div style="grid-column: 1 / -1;">
          <label>Description (optional):</label>
          <textarea name="items[][description]" rows="2" placeholder="Additional item details..."></textarea>
        </div>
      `;

      container.appendChild(itemRow);
    }

    function removeItem(itemId) {
      const item = document.getElementById(`item-${itemId}`);
      if (item) {
        item.remove();
      }
    }

    function generateAndPrint() {
      const form = document.querySelector('form');
      const formData = new FormData(form);
      const queryString = new URLSearchParams(formData).toString();

      const printWindow = window.open(
        `${form.action}?${queryString}`,
        '_blank'
      );

      if (printWindow) {
        printWindow.addEventListener('load', function() {
          setTimeout(function() {
            printWindow.print();
          }, 1000);
        });
      }
    }

    // Validate copies input
    function validateCopies() {
      const copiesInput = document.querySelector('input[name="copies"]');
      const copiesCounter = document.getElementById('copies_counter');
      const value = parseInt(copiesInput.value);

      if (value < 1) {
        copiesInput.value = 1;
        alert('Minimum 1 copy required');
      } else if (value > 200) {
        copiesInput.value = 200;
        alert('Maximum 200 copies allowed');
      }

      // Update counter display
      if (copiesCounter) {
        const finalValue = parseInt(copiesInput.value);
        copiesCounter.textContent = `${finalValue} ${finalValue === 1 ? 'copy' : 'copies'}`;
      }
    }

    // Update print mode info
    function updatePrintModeInfo() {
      const printModeSelect = document.getElementById('print_mode_select');
      const printModeInfo = document.getElementById('print_mode_info');

      if (printModeSelect && printModeInfo) {
        const mode = printModeSelect.value;
        if (mode === 'single') {
          printModeInfo.textContent = 'Single PDF: All copies in one file (recommended for most users)';
          printModeInfo.style.color = '#666';
        } else {
          printModeInfo.textContent = 'Separate PDFs: Each copy as individual file in ZIP archive (for distribution)';
          printModeInfo.style.color = '#e67e22';
        }
      }
    }

    document.addEventListener('DOMContentLoaded', function() {
      addItemRow();
      addItemRow();

      // Add validation for copies input
      const copiesInput = document.querySelector('input[name="copies"]');
      if (copiesInput) {
        copiesInput.addEventListener('input', validateCopies);
        copiesInput.addEventListener('change', validateCopies);
        copiesInput.addEventListener('blur', validateCopies);
        // Initialize counter
        validateCopies();
      }

      // Show/hide print mode info based on selection
      const printModeSelect = document.querySelector('select[name="print_mode"]');
      if (printModeSelect) {
        printModeSelect.addEventListener('change', function() {
          const copiesInput = document.querySelector('input[name="copies"]');
          const value = this.value;

          updatePrintModeInfo();

          if (value === 'separate' && parseInt(copiesInput.value) > 10) {
            if (!confirm('‚ö†Ô∏è Generating ' + copiesInput.value + ' separate PDF files. This may take longer and create a large ZIP file. Continue?')) {
              copiesInput.value = 10;
              validateCopies();
            }
          }
        });
        // Initialize print mode info
        updatePrintModeInfo();
      }

      setTimeout(() => {
        const inputs = document.querySelectorAll('input[name="items[][name]"]');
        if (inputs[0]) inputs[0].value = 'Premium Widget';
        if (inputs[1]) inputs[1].value = 'Standard Component';

        const quantities = document.querySelectorAll('input[name="items[][quantity]"]');
        if (quantities[0]) quantities[0].value = '2';
        if (quantities[1]) quantities[1].value = '5';

        const prices = document.querySelectorAll('input[name="items[][price]"]');
        if (prices[0]) prices[0].value = '25.99';
        if (prices[1]) prices[1].value = '12.50';
      }, 100);
    });
  </script>
</body>
</html>
